{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"<p>Welcome to the DAPNET Paging Gateway for FreePBX!</p> <p>Remember the days of calling a pager number, entering your callback number or leaving a voicemail and that message being sent to the end user? Well those days are kind of back... at least for Hams. This is what the kids are calling \"Retro-tech\" today.</p> <p>The Decentralized Amateur Paging Network (DAPNET) is a paging network that was setup by some hams in Germany and has slowly been moving around the world in popularity. While it has a large user base outside the US, it is gaining some traction in the US as well. It utilizes the old POCSAG protocol to send Alpha-Numeric messages to old Alpha-Numeric text pagers.</p> <p>It can breathe new life into those old Alpha-Numberic Pagers that we used to all carry around. It can use your Pi-Star hotspot to send a page or a high profile repeater. More information about DAPNET can be found at https://hampager.de. The site is in German, so you will need to translate it to your language, or be able to read German.</p> <p>The DAPNET Paging Gateway provides the ability to simulate the old paging gateway callback system from your FreePBX PBX system to DAPNET.</p> <p>This Wiki is designed as a user guide for the end users of the software.</p> <p>This software is for use by Amateur Radio Operators Only.</p>"},{"location":"#requirements","title":"Requirements","text":"<p>In order to use these scripts, you will need to have the following setup and configured:</p> <ul> <li>A Database server instance (seperate from the FreePBX database).<ul> <li>Supported Databases<ul> <li>MS SQL Server</li> <li>MySQL/MariaDB</li> <li>PostgreSQL</li> <li>SQLite</li> </ul> </li> </ul> </li> <li>A FreePBX server instance</li> </ul> <p>You should also:</p> <ul> <li>be comfortable with editing files in an editor like Visual Studio Code or some other editor</li> <li>be comfortable with the Linux command line</li> </ul>"},{"location":"#parts-of-the-software","title":"Parts of the Software","text":"<p>The DAPNET Paging Gateway is made up of multiple parts, but only a few are needed to run:</p> <ul> <li><code>dapnet_callsign_data_load.py</code> - This script loads the needed callsign data from DAPNET and RadioID.net. You can run this on your FreePBX instance if you would like, but it will would be better to run it on a seperate machine from the PBX.</li> <li><code>dapent_paging_gateway.py</code> - This is the script that is called by FreePBX/Asterisk to send the message to DAPNET. This script supports use on both a Single user PBX (IE a personal at home PBX) and a Multi-User PBX (like one hosted in the cloud for multiple users to access like one of the Ham Radio VOIP Services.)</li> </ul>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>Know that you modify your FreePBX installation at your own risk. Make sure you make backups and everything before you start. </p> <p>This install is not for the faint of heart. This script is a bit of an involved install and if you are not comfortable with working in SQLc or making changes to your FreePBX/Asterisk System, you can break things badly.</p> <p>You have been thusly warned.</p>"},{"location":"#thanks","title":"Thanks","text":"<p>I did want to say thanks to the people who, behind the scenes, helped me with research, testing, encouragement and even gave me the idea to do this. You know who you are.</p>"},{"location":"#contact-me","title":"Contact Me","text":"<p>If you have questions, please feel free to reach out to me. You can reach me in one of the following ways:</p> <ul> <li>Discord: Ravendos#7364</li> <li>Mastodon: @n8acl@mastodon.radio</li> <li>E-mail: n8acl@qsl.net</li> </ul> <p>If you reach out to me and have an error, please include what error you are getting and what you were doing. I may also ask you to send me certain files to look at. Otherwise just reach out to me :).</p>"},{"location":"Installation/","title":"Installation/Setup","text":"<p>Remember that all the commands shared here are for Linux. So if you want you can run this on a Linux Server or even a Raspberry Pi. In fact I have mine running on a Raspberry Pi 3B+.</p> <p>If you want to run this on a Windows or Mac machine, you will need to be able to install Python3, be familiar installing from a requirements.txt and be familiar with how to schedule a recurring task in those OS's.</p>"},{"location":"Installation/#what-you-will-need","title":"What you will need","text":"<p>You will need a few things to be able to configure the scripts.</p> <ul> <li>Your DAPNET Username and Password</li> <li>The Username, Password and IP Address of your Database Server Instance</li> </ul>"},{"location":"Installation/#obtaining-dapnet-keys","title":"Obtaining DAPNET Keys","text":"<p>The first step in this process is to get your DAPNET Credentials. If you are already a DAPNET user, you should already have your Username and Password from them. </p> <p>If you are not currently a DAPNET user, head over to hampager.de and go through the signup process. The website is in German, so you will need to be able to either read German or translate the webpage. The approval process could take a couple of days and does take a few steps, so you may want to start on that now... I will wait... Are you back? Ok.</p>"},{"location":"Installation/#getting-the-script","title":"Getting the Script","text":"<p>The next step is cloning the repo to get all the files and then installing the needed libraries for the scripts to work properly.</p> <p>This is probably the easiest step to accomplish.</p> <p>Log into your FreePBX box and run the following commands:</p> <pre><code>sudo apt-get update &amp;&amp; sudo apt-get -y upgrade &amp;&amp; sudo apt-get -y dist-upgrade\n\nsudo apt-get install python3 python3-pip git\n\ngit clone https://github.com/n8acl/dapnet_paging_gateway.git\n\ncd dapnet_paging_gateway\n\npip3 install -r requirements.txt\n</code></pre> <p>If you are going to run the callsign loader script on another computer, you will need to move that script and the <code>requirements.txt</code> file to that machine and install the requirements there as well.</p> <p>First let's setup the<code>config.json</code> file. You will need this to be able to configure and use your system.</p>"},{"location":"changelog/","title":"Change Log","text":"<ul> <li>05/29/2025<ul> <li>Refactoring/Refining of the code base to bring it up to better programming and Database Standards. </li> <li>Update of Documentation</li> <li>Added Support for Multiple Database Systems</li> <li>Update to configuration json file.</li> <li>Changed script to support multiple user modes in one script.</li> </ul> </li> </ul>"},{"location":"configure_database/","title":"Configure Database","text":"<p>For this to run and work, there is a database component to this that loads some data on a regular basis. So the first thing we need to do is setup the database on your database server.</p> <p>Note that for this step, you should already have a supported Database System installed and configured. The installation and configuration is out side the scope of this documentation and can be found online.</p> <p>You also should be a little familiar with Databases and SQL in general to do this part. If not, find a friend who is capable and ask them to help with it (note I didn't say do it for you).</p>"},{"location":"configure_database/#create-the-database","title":"Create the Database","text":"<p>To create the database, SSH into where you cloned the repo and make sure you are in the scripts directory.</p> <pre><code>cd dapnet_paging_gateway\n\ncd scripts\n</code></pre> <p>Then run the <code>install.py</code> script. This will create the database, the tables and any local directories needed for data downloading and processing.</p> <pre><code>python3 install.py\n</code></pre>"},{"location":"configure_database/#preload-some-of-the-data-multi-user-only","title":"Preload some of the data - Multi-User Only","text":"<p>If you are going to use the script in Multi-User mode, you will need to preload some data to the database. These are extensions that people could be calling from, so that the script can pair their extension with the correct Callsign. An example of this would be, say you have multiple Hams at home that could potentially use this system, you will need to add their extension and callsign to the database manually so that the gateway knows what callsign to associate with that extension.</p> <p>To do this, run the following (modified of course to fix your situation) in your Database Server:</p> <pre><code>insert into dapnet.dbo.ext_data (extension,callsign)\nvalues('101','W1ABC'),\n('102','WA2ABD')\n</code></pre> <p>Make sure to add as many extensions as needed for your PBX.</p>"},{"location":"configure_database/#test-the-scripts","title":"Test the Scripts","text":"<p>Now you have everything installed and configured, let's try running the script.</p> <p>Using your DMR ID run the following (making sure you are in the scripts folder):</p> <p>Replace the following the command first: * <code>myDMR</code>: your DMR ID. If you have multiple ones, just choose one, it does not matter. * <code>test_ext</code>: If you are in Single user Mode, set this to 12345. If you are in Multi-User Mode, set this to an extension you added earlier.</p> <pre><code>python3 dapnet_paging_gateway.py myDMR 8675309 test_ext\n</code></pre> <p>You should get a page on your pager, or check Pi-Star, or check the DAPNET website and you should see a message to you formatted Simliar to <code>N8ACL: Call me at 8675309</code> but it should be your callsign.</p> <p>If you get the message, you have everything configured correctly thus far.</p> <p>Now it's time to configure FreePBX/Asterisk.</p>"},{"location":"configure_freepbx/","title":"Configure FreePBX/Asterisk","text":"<p>Now that we have the scripts configured and the database built, the last step before we are done is to configure FreePBX and Asterisk.</p> <p>Note that you should already have a FreePBX/Asterisk instance installed and configured. That is outside the scope of this document/project. There are plenty of guides online to help you do that.</p> <p>You will need to connect to your FreePBX box to edit files and move files around during this next process. You should be comfortable with editing files in an editor like Visual Studio Code and with working on the Linux command line.</p>"},{"location":"configure_freepbx/#disclaimer","title":"Disclaimer","text":"<p>Know that you modify your FreePBX installation at your own risk. Make sure you make backups and everything before you start. </p> <p>This install is not for the faint of heart. This script is a bit of an involved install and if you are not comfortable with working in MySQL or making changes to your FreePBX/Asterisk System, you can break things badly.</p> <p>You have been thusly warned.</p>"},{"location":"configure_freepbx/#move-scripts-and-files","title":"Move scripts and files","text":"<p>First we need to move some of the files around out of the repo folder to put them into the right places so that what needs to access them can.</p> <p>SSH into your FreePBX box.</p> <p>Run the following in order to move the scripts, sounds and json file:</p> <pre><code>mkdir /var/lib/asterisk/scripts/dapnet\n\nmkdir /var/lib/asterisk/sounds/custom/dapnet_gateway\n\ncd dapnet_paging_gateway\n\ncp -R /scripts/* /var/lib/asterisk/scripts/dapnet/*\n\ncp /sounds/dapnet_gateway/* /var/lib/asterisk/sounds/custom/dapnet_gateway/*\n</code></pre> <p>Verify your work. Make sure all the scripts are in the Asterisk dapnet Scripts folder and that there is a directory called src with 4 scripts in it in the dapnet folder and the sounds are in the sounds folder and the </p>"},{"location":"configure_freepbx/#modify-the-extensions_customconf","title":"Modify the extensions_custom.conf","text":"<p>Next, we need to modify the <code>extensions_custom.conf</code> file. Open that in your editor.</p> <p>Next copy the following stanza into that file:</p> <pre><code>;# // BEGIN DAPNET\nexten =&gt; 327638,1,Answer\nexten =&gt; 327638,n,Wait(1)\nexten =&gt; 327638,n,Set(TIMEOUT(digit)=8)\nexten =&gt; 327638,n,Set(TIMEOUT(response)=10)\nexten =&gt; 327638,n,Set(VOLUME(TX)=10)\nexten =&gt; 327638,n,Playback(/var/lib/asterisk/sounds/custom/dapnet_gateway/dpg_welcome)\nexten =&gt; 327638,n,Wait(1)\nexten =&gt; 327638,n,Playback(/var/lib/asterisk/sounds/custom/dapnet_gateway/dpg_enter_dmrid)\nexten =&gt; 327638,n,Set(VOLUME(TX)=0)\nexten =&gt; 327638,n,Read(RIC,beep,8)\nexten =&gt; 327638,n,Set(VOLUME(TX)=10)\nexten =&gt; 327638,n,Playback(/var/lib/asterisk/sounds/custom/dapnet_gateway/dpg_enter_callback)\nexten =&gt; 327638,n,Set(VOLUME(TX)=0)\nexten =&gt; 327638,n,Read(CALLBACK,beep,12)\nexten =&gt; 327638,n,System(python3 /var/lib/asterisk/scripts/dapnet/dapnet_paging_gateway.py ${RIC} ${CALLBACK} ${CALLERID(number)})\nexten =&gt; 327638,n,Set(VOLUME(TX)=10)\nexten =&gt; 327638,n,Playback(/var/lib/asterisk/sounds/custom/dapnet_gateway/dpg_thank_you)\nexten =&gt; 327638,n,Wait(1)\nexten =&gt; 327638,n,Hangup\n;# // END DAPNET\n</code></pre> <p>Save that and exit.</p> <p>Then restart Asterisk.</p>"},{"location":"configure_freepbx/#configure-freepbx","title":"Configure FreePBX","text":"<p>Now we need to tell FreePBX about this new extension. It will not pick it up automatically.</p> <ul> <li>Log into your FreepBX GUI in a web browser.</li> <li>Click on <code>Custom Extensions</code></li> <li>Click <code>Add Extension</code></li> <li>In the <code>Custom Extension</code> field, enter <code>327638</code> (spells DAPNET on the phone keypad)</li> <li>In the <code>Description</code> field, enter <code>DAPNET</code> so you know what this is later.</li> <li>Click <code>Submit</code></li> <li>Click <code>Apply Changes</code></li> </ul> <p>That should do it. Now we should be able to send a page to a user.</p>"},{"location":"configure_scripts/","title":"Configure the Scripts","text":"<p>Once you have your all the credentials you need, have cloned the repo and installed all the libraries, you now need to configuring the scripts. </p>"},{"location":"configure_scripts/#configure-configjson","title":"Configure config.json","text":"<p>First, open the <code>config.json</code> file in the editor of your choice.</p> <p>In this file you will see the following:</p> <pre><code>{\n    \"dapnet\": {\n        \"username\": \"DAPNET USER NAME\",\n        \"password\": \"DAPNET PASSWORD\",\n        \"tx_group\": \"all\"\n    },\n    \"database\": {\n        \"rdbms_type\": \"DB SERVER TYPE\",\n        \"credentials\": {\n            \"username\": \"DB SERVER USERNAME\",\n            \"password\": \"DB SERVER PASSWORD\",\n            \"host\": \"FQDN or IP ADDRESS OF DB INSTANCE\",\n            \"db\": \"DAPNET\"\n        }\n    },\n    \"gateway_mode\": 1\n}\n</code></pre> <p>Settings Definitions: * <code>dapnet</code> - This section is your DAPNET Credentials     * <code>username</code>: This is your DAPNET Username, usually your callsign.     * <code>password</code>: This is your DAPNET Password.     * <code>tx_group</code>: This is the DAPNET tx_group to send the messages to. This is usually a regional setting. You will need to look this up on DAPNET to find out where the best place to send the messages is. Try to avoid the <code>all</code> group to keep from hitting every transmitter connected to DAPNET. * <code>database</code> - This section is your Database Server credentials.     * <code>rdbms_type</code>: This is the type of Database Server you are using.          * Supported Types             * <code>mssql</code> - MS SQL Server             * <code>mysql</code> - MySQL/MariaDB             * <code>postgresql</code> - PostgreSQL             * <code>sqlite</code> - SQLite (built in Python DB)     * <code>credentials</code>: These are the credentials for your DB Instance         * <code>username</code>: Database Username         * <code>password</code>: Database Password         * <code>host</code>: FQDN or IP address of your Database Instance         * <code>db</code>: Always needs to be DAPNET - DO NOT CHANGE THIS. If you change this, it will break things. * <code>gateway_mode</code>: This is the mode that the gateway should work in. This defines whether it is in Single-User (personal) or Multi-User (many users like a Cloud PBX) mode.     * <code>1</code>: Single-User Mode     * <code>2</code>: Multi-User Mode</p> <p>Make your settings changes and then save the file.</p>"},{"location":"configure_scripts/#set-callsign-data-load-for-automatic-loading","title":"Set Callsign Data load for automatic loading","text":"<p>Remember how I said that there is some data that is pulled from vairous sources to achieve this magic. This is the part that does it.</p> <p>Once you have the scripts configured and the database built, we will need to load the data from the web.</p> <p>This is something that should happen on a regulr basis to make sure everything is up to date. Let's go ahead and load the data now.</p> <p>Run the following wherever you have the <code>dapnet_callsign_data_load.py</code> file sitting. This could be on your FreePBX box or this could be on another computer. </p> <pre><code>python3 dapnet_callsign_data_load.py\n</code></pre> <p>This will take a bit to run and it should give feedback as to the progress. It should not take too terribly long, but it can take 10 - 15 minutes to parse all the data.</p> <p>Because this can take a while to run, I would suggest setting up a cron job to run this over night. The cron job I use is:</p> <pre><code>0 2 * * * python3 scripts/dapnet_callsign_data_load.py\n</code></pre> <p>This will fire my script every day at 2:00 am and do the data load then.</p> <p>Next we need to configure the Database.</p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#how-does-this-work","title":"How does this work?","text":"<p>There is alot of technical mumbo jumbo I can get into, but simply just know that there is alot of Python and Asterisk Magic going on in the background. There is alot of data being pulled, messaged and loaded from various sources to make it all work.</p>"},{"location":"faq/#why-dmr-id-for-dialing-a-person-instead-of-ric-or-some-other-extension","title":"Why DMR ID for dialing a person instead of RIC or some other extension?","text":"<p>DMR ID is a universal number that any ham can have. That is why this was chosen. There is not a way to cross reference Pager RICS to Callsigns from DAPNET. Plus DAPNET uses a modified version of a persons DMR ID as the Pager RIC, if they do not provide one from the pager they have. So using this method, a user can send a page to any DAPNET Subscriber. The script that is used will convert the DMR ID to a callsign to send the page to them via the DAPNET API.</p>"},{"location":"faq/#how-do-i-know-or-how-do-i-find-out-if-the-person-i-want-to-page-is-a-dapnet-subscriber","title":"How do I know or how do I find out if the person I want to page is a DAPNET Subscriber?","text":"<p>Yeah. This is a tricky question as there really is no straight answer. There are some ways to do this:</p> <ul> <li>First off, the easiest way is to ask the person you are wanting to send pages to.</li> <li>If you are a DAPNET Subscriber yourself, you can login to the DAPNET website and do a search for the person. If they come up, they are a subscriber. However, they need to have everything setup and configured for the message to go through.</li> </ul> <p>Otherwise, there really isn't a straight forward way</p>"},{"location":"faq/#so-how-do-i-find-a-persons-dmr-id","title":"So how do I find a person's DMR ID?","text":"<p>Once you know if a person is a DAPNET subscriber, you can go to RadioID.Net and use the online database search to get their DMR ID. And of course, you can always ask the person you want to page for their DMR ID.</p>"},{"location":"faq/#what-if-they-dont-have-a-dmr-id","title":"What if they don't have a DMR ID?","text":"<p>Then you are not able to use this system to page them. Sorry. There is nothing I can do about that.</p>"},{"location":"faq/#how-do-i-know-if-the-page-went-through","title":"How do I know if the page went through?","text":"<p>Just like in the old days, the only way you know it went through and if they got it is if they call you back. You just have to cross your fingers and hope for the best.</p>"},{"location":"faq/#what-happens-if-i-try-to-page-someone-who-is-not-a-dapnet-subscriber","title":"What happens if I try to page someone who is not a DAPNET subscriber?","text":"<p>Absolutly nothing. No message will go through to anyone. As the old saying goes, it will just drift in CyberSpace for all eternity. Unfortunatly, just like the old days, there will also be no prompt on the phone either. You just have to cross your fingers and hope for the best.</p>"},{"location":"using_the_gateway/","title":"Using the DAPNET Paging Gateway","text":"<p>Sending a person a page is accomplished by DMR ID. This was the most universally accessible way to make this work (see the FAQ's for more information).</p> <p>To use the gateway, dial <code>327638</code> (spells DAPNET on the phone dialpad) and then follow the voice prompts:</p> <ul> <li><code>At the Beep, enter the DMR ID of the person you wish to contact and then press the pound key</code> - At the beep, dial the DMR ID of the person.</li> <li><code>At the beep, please enter your callback number and then press the pound key.</code> - at the beep, enter the number you want the person to call you back at. This can be your Ham VOIP extension (Ham's Over IP, AmateurWire, Hamshack Hotline or OARC) or an actual PSTN number. </li> </ul> <p>A page will then be sent to the person and be formatted as <code>Yourcallsign: Call me at YourCallbackNumber</code></p> <ul> <li>Example: <code>N8ACL: Call me at 8675309</code></li> </ul> <p>At the end, the call will automatically hangup.</p>"}]}